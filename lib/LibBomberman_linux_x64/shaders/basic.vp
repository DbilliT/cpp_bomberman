#version 120

uniform	mat4 projection;
uniform	mat4 view;
uniform	mat4 model;

uniform sampler2D fTexture0;

attribute vec4 vPosition;
attribute vec4 vColor;
attribute vec4 vNormal;
attribute vec2 vTexCoord;

varying vec4 fColor;
varying vec4 fNormal;
varying vec2 fUv;
varying float f;

void main(void)
{
  vec3	lum = vec3(1.0, 1.0, -1.0);


  float norme = sqrt(lum.x * lum.x + lum.y * lum.y + lum.z * lum.z);
  vec3	vlm = vec3(lum.x / norme, lum.y / norme, lum.z / norme);
  
  fColor = vColor;
  fNormal = vNormal;
  fUv = vTexCoord;
  gl_Position = projection * view * model * vPosition;
  f = vlm.x * fNormal.x + vlm.y * fNormal.y + vlm.z * fNormal.z;
  f += 1;
  f /= 2;
}
